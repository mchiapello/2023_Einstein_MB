{
  "hash": "90d6f45b21fd3d0951e29ee553a62460",
  "result": {
    "markdown": "---\nformat: \n  revealjs:\n    navigation-mode: vertical\n    slide-number: false\n    width: 1600\n    height: 900\n    logo: \"images/revelo.png\"\n    footer: \"[home page](https://mchiapello.github.io/202304_REVELO_Torvergata/)\"\n    css: [\"css/theme.css\", \"css/custom.css\", \"css/styles.css\"]\n    theme: simple\n    controls: true\neditor: source\nfilters:\n  - roughnotation\neditor_options: \n  chunk_output_type: inline\n---\n\n\n\n##  {#TitleSlide data-menu-title=\"TitleSlide\" background-image=\"images/back001.jpg\" background-size=\"cover\" background-opacity=\"0.3\"}\n\n\n\n\n\n\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Architects+Daughter&family=Julius+Sans+One&family=Montserrat:wght@300&family=Rock+Salt&display=swap');\n</style>\n\n::: {style=\"position: absolute; left: 180px; top: 200px; height: 525px; width: 1500px; background-color: #69b1e9; padding: 20px; padding-left: 50px; border-radius: 5px;\"}\n[Files and Software]{style=\"font-size: 120px; font-weight: bold; line-height: 1em; margin: 0px; font-family: 'Architects Daughter', cursive;\"}\n\n[Introduzione all'analisi RNASeq in R]{style=\"font-size: 40px;font-weight: bold;\"}\n\n[Dipartimento di Biomedicina e Prevenzione]{style=\"font-size: 40px;font-weight: bold;\"}\n\n<br> <br>\n\n[Marco Chiapello, Revelo Datalab]{style=\"font-size: 40px; font-weight: bold;\"}\n\n[2023-03-31]{style=\"font-size: 30px;font-weight: bold;\"}\n:::\n\n\n\n# [Files]{.tit .p-span-center}\n\n\n## Diversi tipi di file\n\n### FASTA file\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nIl Formato FASTA è un formato di testo per rappresentare le sequenze nucleotidiche o le sequenze aminoacidiche. Sia i nucleotidi che gli aminoacidi sono rappresentati da una singola lettera. Sulla prima linea antecedente alla sequenza nucleotidica/aminoacidica viene riportato il nome della sequenza, preceduto dal simbolo \"\\>\"\n:::\n\nI file contenenti queste sequenze possono avere varie desinenze: fasta, fna, ffn, faa, fa, frn\n\n## Diversi tipi di file\n\n### FASTA file\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nIl Formato FASTA è un formato di testo per rappresentare le sequenze nucleotidiche o le sequenze aminoacidiche. Sia i nucleotidi che gli aminoacidi sono rappresentati da una singola lettera. Sulla prima linea antecedente alla sequenza nucleotidica/aminoacidica viene riportato il nome della sequenza, preceduto dal simbolo \"\\>\"\n:::\n\n    >NM_001404729.1 Oryza sativa ribulose bisphosphate carboxylase small chain A\n    CTCAACAGCACTGCTACTGGACATACTCTACTACTACTAGCCAGTAAGCTAGCTAACTAACTACGTGGCT\n    ATGGCCCCCACCGTGATGGCCTCCTCGGCCACCTCCGTGGCTCCATTCCAAGGGCTCAANNNNNNNNNNN\n\n## Diversi tipi di file\n\n### FASTA file\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nIl Formato FASTA è un formato di testo per rappresentare le sequenze nucleotidiche o le sequenze aminoacidiche. Sia i nucleotidi che gli aminoacidi sono rappresentati da una singola lettera. Sulla prima linea antecedente alla sequenza nucleotidica/aminoacidica viene riportato il nome della sequenza, preceduto dal simbolo \"\\>\"\n:::\n\n    >MCHU - Calmodulin - Human, rabbit, bovine, rat, and chicken\n    MADQLTEEQIAEFKEAFSLFDKDGDGTITTKELGTVMRSLGQNPTEAELQDMINEVDADGNGTID\n    FPEFLTMMARKMKDTDSEEEIREAFRVFDKDGNGYISAAELRHVMTNLGEKLTDEEVDEMIREA\n    DIDGDGQVNYEEFVQMMTAKXXXXXX\n\n## Diversi tipi di file\n\n### FASTA file\n\nÈ possibile creare dei file che contengano più sequenze concatenando singoli FASTA file.\n\n    >MCHU - Calmodulin - Human, rabbit, bovine, rat, and chicken\n    MADQLTEEQIAEFKEAFSLFDKDGDGTITTKELGTVMRSLGQNPTEAELQDMINEVDADGNGTID\n    FPEFLTMMARKMKDTDSEEEIREAFRVFDKDGNGYISAAELRHVMTNLGEKLTDEEVDEMIREA\n    DIDGDGQVNYEEFVQMMTAK\n\n    >gi|5524211|gb|AAD44166.1| cytochrome b [Elephas maximus maximus]\n    LCLYTHIGRNIYYGSYLYSETWNTGIMLLLITMATAFMGYVLPWGQMSFWGATVITNLFSAIPYIGTNLV\n    EWIWGGFSVDKATLNRFFAFHFILPFTMVALAGVHLTFLHETGSNNPLGLTSDSDKIPFHPYYTIKDFLG\n    LLILILLLLLLALLSPDMLGDPDNHMPADPLNTPLHIKPEWYFLFAYAILRSVPNKLGGVLALFLSIVIL\n    GLMPFLHTSKHRSMMLRPLSQALFWTLTMDLLTLTWIGSQPVEYPYTIIGQMASILYFSIILAFLPIAGX\n    IENY*\n\n## Diversi tipi di file\n\n### FASTA file\n\n#### Nucleotidi\n\n![](images/nucl.png)\n\n## Diversi tipi di file\n\n### FASTA file\n\n#### Aminoacidi\n\n![](images/amino.png)\n\n\n## Diversi tipi di file\n\n### FASTQ format\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nIl formato FASTQ è un formato di testo per rappresentare sia le sequenze biologiche (normalmente nucleotidiche) sia il corrispettivo valore di qualità. Sia le sequenze che lo score di qualità sono codificati da una singola lettera (carattere ASCII) per brevità.\n:::\n\n## Diversi tipi di file\n\n### FASTQ format\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nIl formato FASTQ è un formato di testo per rappresentare sia le sequenze biologiche (normalmente nucleotidiche) sia il corrispettivo valore di qualità. Sia le sequenze che lo score di qualità sono codificati da una singola lettera (carattere ASCII) per brevità.\n:::\n\n::: f20\nUn file FASTQ è identificato da 4 linee:\n\n-   Linea 1: inizia con il simbolo \"\\@\" ed è seguita dall'identificativo della sequenza (come nelle sequenze FASTA)\n-   Linea 2: contiene la sequenza nucleotidica\n-   Linea 3: inizia con un \"+\" e può contenere descrizioni aggiuntive della sequenza\n-   Linea 4: contiene i valori di qualità dei singoli nucleotidi\n:::\n\n## Diversi tipi di file\n\n### FASTQ format\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nIl formato FASTQ è un formato di testo per rappresentare sia le sequenze biologiche (normalmente nucleotidiche) sia il corrispettivo valore di qualità. Sia le sequenze che lo score di qualità sono codificati da una singola lettera (carattere ASCII) per brevità.\n:::\n\n    @SEQ_ID\n    GATTTGGGGTTCAAAGCAGTATCGATCAAATAGTAAATCCATTTGTTCAACTCACAGTTT\n    +\n    !''*((((***+))%%%++)(%%%%).1***-+*''))**55CCF>>>>>>CCCCCCC65\n\n## Diversi tipi di file\n\n### FASTQ format\n\n#### Cosa significa \"score di qualità\"?\n\n::: f20\nLo score di qualità è usato per identificare la **probabilità di corretta identificazione del corrispondente nucleotide**.\n:::\n\n![](images/phred1.png)\n\n::: notes\n-   I numeri da 33 a 126 sono i numeri ASCII corrispondenti alla lettera che indicano\n-   Score più alto osservato 40, quindi molti si fermano li\n:::\n\n## Diversi tipi di file\n\n### FASTQ format\n\n#### Cosa significa \"score di qualità\"?\n\n::: f20\nLo score di qualità è usato per identificare la **probabilità di corretta identificazione del corrispondente nucleotide**.\n:::\n\n::: centerI\n![](images/phred2.png)\n:::\n\n## Diversi tipi di file\n\n### FASTQ format\n\nI FASTQ file possono avere dimensioni molto grandi, per questo nella maggior parte dei casi non avrete a che fare con ilMioFile.fastq, ma con ilMioFile.fastq.gz.\n\nQuesto significa che il file è compresso, quindi non leggibile da un editor di testa senza prima essere de-compresso.\n\n\n## Diversi tipi di file\n\n### SAM/BAM format\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nI file SAM (Sequence Alignment Map) sono file di testo creati originariamente per contenere le sequenze biologiche allineate ad una sequenza di riferimento (genoma).\n:::\n\n::: f30\n-   Il formato è stato sviluppato per il progetto 1000 Genome.\n-   Questo formato è largamente usato per le sequenze nucleotiche generate dalle tecnologie NGS.\n-   Nella maggior parte dei casi non vi troverete a che fare con un file SAM, ma con un file BAM\n:::\n\n## Diversi tipi di file\n\n### SAM/BAM format\n\n#### Differenza tra SAM e BAM?\n\n::: fragment\n-   In realtà nessuna! I due file sono identici nel contenuto\n-   In pratica il file SAM può essere letto da un editor di testo, mentre il file BAM no.\n-   Il BAM è un file binary, cioè machine-readable. È più compresso del file human-readable.\n:::\n\n## Diversi tipi di file\n\n### SAM/BAM format\n\n::: f30\nI file SAM/BAM consistono in 2 parti una intestazione (header) e un allineamento.\n\n-   L'**intestazione**\n    -   (se presente) dev'essere prima dell'allineamento\n    -   Ogni riga dell'intestazione inizia con il simbolo \"\\@\"\n    -   Una coppia di lettere che segue il simbolo \"\\@\" indica la sezione dell'intestazione\n\n::: code\n    @RG     ID:1    SM:C5926_BM_IonCode_0118\n    @PG     ID:samtools     PN:samtools    VN:1.16.1    CL:samtools view -H C5926_BM_IonCode_0118.reassembled.bam\n:::\n:::\n\n::: notes\n-   @RG = read group\n    -   ID = Read group identifier\n    -   SM = Sample\n-   @PG = Program\n    -   ID = Program record identifier\n    -   PN = Program name\n    -   VN = software version\n    -   Cl = command line\n:::\n\n## Diversi tipi di file\n\n### SAM/BAM format\n\n::: f30\nI file SAM/BAM consistono in 2 parti una intestazione (header) e un allineamento.\n\n-   L'**allineamento**\n:::\n\n![](images/bam2.png){.absolute top=\"400\" left=\"0\" width=\"700\" height=\"auto\"}\n\n![](images/bam1.png){.absolute top=\"300\" right=\"0\" width=\"350\" height=\"auto\"}\n\n::: notes\n-   11 campi obbligatori\n\n-   Metadati non obbligatori\n\n-   Concise Idiosyncratic Gapped Alignment Report (CIGAR) string\n:::\n\n## Diversi tipi di file\n\n### SAM/BAM format\n\n#### FLAGS\n\n![](images/flags1.png){.absolute left=\"250\" width=\"600\" height=\"auto\"}\n\n::: f20\n[Flag calculator](https://broadinstitute.github.io/picard/explain-flags.html)\n:::\n\n## Diversi tipi di file\n\n### SAM/BAM format\n\n#### CIGAR\n\n![](images/cigar1.png){.absolute top=\"250\" left=\"0\" width=\"500\" height=\"auto\"}\n\n::: fragment\n![](images/cigar2.png){.absolute top=\"300\" right=\"0\" width=\"400\" height=\"auto\"}\n:::\n\n::: notes\n-   Concise Idiosyncratic Gapped Alignment Report (CIGAR) string\n-   Rappresenta l'allineamento di una sequenza al genoma di riferimento\n:::\n\n\n## Diversi tipi di file\n\n### BED/GTF/GFF3 formats\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nQuesti sono i tre principali formati di annotazione. Ci sono molte somiglianze ma anche alcune fondamentali differenze.\n:::\n\n::: f30\n-   BED: permettono un solo livello di complessita, ogni caratteristica può essere divisa in diversi blocchi (linee del file)\n-   GTF: permettono 2 livelli di complessità, gli esoni possono essere raggruppati in trascritti e i trascritti in geni\n-   GFF3: permettono un numero arbitrari di livelli\n:::\n\n## Diversi tipi di file\n\n### BED\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nI file BED (Browser Extensible Data) sono file di testo creati per descrivere caratteristiche del genoma.\n:::\n\n::: fragment\n![](images/bed1.png){.absolute top=\"350\" left=\"20\" width=\"1000\" height=\"auto\"}\n:::\n\n## Diversi tipi di file\n\n### BED\n\n![](images/bed2.png){.absolute top=\"150\" left=\"30\" width=\"1200\" height=\"auto\"}\n\n\n## Diversi tipi di file\n\n### GTF format\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nGFF2 or GTF (General Transfer Format) è un formato usato per descrivere due livelli di annotazione: geni e trascritti.\n:::\n\n::: fragment\n![](images/gtf1.png){.gft1 .absolute top=\"360\" left=\"20\" width=\"1200\" height=\"auto\"}\n:::\n\n## Diversi tipi di file\n\n### GTF format\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nGFF2 or GTF (General Transfer Format) è un formato usato per descrivere due livelli di annotazione: geni e trascritti.\n:::\n\n![](images/gtf2.png){.absolute top=\"360\" left=\"0\" width=\"1200\" height=\"auto\"}\n\n\n## Diversi tipi di file\n\n### GFF3 format\n\n::: {.callout-important icon=\"false\"}\n## Definizione\n\nGFF3 (General Feature Format) è un file ti testo che contiene informazioni su ogni caratteristica delle sequenze nucleiche o aminiacidiche che descrive. CDS, microRNAs, binding domains, ORFs e molto altro possono essere gestite da questo formato\n:::\n\n#### Campi{.center}\n\n::::{.columns}\n\n:::{.column width=\"33%\" .f20}\n- Column 1: \"seqid\"\n- Column 2: \"source\"\n- Column 3: \"type\"\n:::\n\n:::{.column width=\"33%\" .f20}\n- Column 4:\"start\"\n- Column 5: \"end\"\n- Column 6: \"score\"\n:::\n\n:::{.column width=\"33%\" .f20}\n- Column 7: \"strand\"\n- Column 8: \"phase\"\n- Column 9: \"attributes\"\n:::\n\n::::\n\n\n## Diversi tipi di file\n\n### GFF3 format\n\n![](images/gff31.png){.absolute top=\"240\" left=\"0\" width=\"490\" height=\"auto\"}\n\n\n![](images/gff32.png){.absolute top=\"170\" left=\"500\" width=\"600\" height=\"auto\"}\n\n\n\n:::{.notes}\n-   It encodes three alternatively-spliced transcripts named EDEN.1, EDEN.2 and EDEN.3,\n-   **EDEN.3** has two alternative translational **start sites** leading to the generation of two protein coding sequences.\n:::\n\n# [Software]{.tit .p-span-center}\n\n## Diversi Software\n### Terminal\n\n<br>\n\n:::{.tcenter}\n[DEMO]{.tit .p-spam.center}\n\n[material](https://swcarpentry.github.io/shell-novice/)\n:::\n\n\n## Diversi Software\n### Pre-alignment QC\n\n:::{.tcenter}\n[FastQC]{.tit .p-spam.center}\n\n<br>\n\n[[https://www.bioinformatics.babraham.ac.uk/projects/fastqc/](https://www.bioinformatics.babraham.ac.uk/projects/fastqc/)]{.p-spam.center}\n\n<br>\n\n[material](https://mchiapello.github.io/202010_VirusDetection/Pres/M5_FastQC.html#2)\n\n:::\n\n\n## Diversi Software\n### Trim/filter reads\n\nQuesto passaggio è importante per \n\n1. rimuovere i primer adapters\n\n1. Filtrare le reads di bassa qualità (se presenti)\n\nLa rimozione delle reads di bassa qualità semplifica l'analisi a valle\n\n\n\n## Diversi Software\n### Allineamento al genoma\n\n::: {.callout-important icon=\"false\"}\n## Definizione\nL'allineamenro delle reads al genoma permette di individuare le differenze tra le reads e il genoma di riferimento\n:::\n\n:::{.centerI2}\n![](images/mapping.png)\n:::\n\n:::{.notes}\n- perform read alignment or mapping to determine where in the genome the reads originated from\n\n- The alignment process consists of choosing an appropriate reference genome to map our reads against\n\n- performing the read alignment using one of several splice-aware alignment tools\n\n- The choice of aligner is often a personal preference and also dependent on the computational resources that are available to you\n\n\n:::\n\n## Diversi Software\n### Allineamento al genoma\n#### STAR\n\n- Spliced Transcripts Alignment to a Reference\n\n- STAR is an aligner designed to specifically address many of the challenges of RNA-seq data mapping \n\n- STAR requires a lot of computational power\n\n:::{.p-img-center}\n![](images/star.png){width=400}\n:::\n\n\n## Diversi Software\n### Allineamento al genoma\n#### Quasi mapping\n\n- Common to all of these tools is that base-to-base alignment of the reads is avoided, which is the time-consuming step\n\n- These lightweight alignment tools provide quantification estimates much faster than older tools (typically more than 20 times faster) with improvements in accuracy\n\n- These transcript expression estimates, often referred to as ‘pseudocounts’ or ‘abundance estimates’, can be aggregated to the gene level for use with differential gene expression tools like DESeq2\n\n:::{.notes}\n- Salmon\n\n- Kallisto\n:::\n\n## Diversi Software\n### Allineamento al genoma\n#### [Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#using-salmon)\n\n1. Salmon is a tool for wicked-fast transcript quantification from RNA-seq data\n\n1.  All you need are:\n\n       - a FASTA file containing your reference transcripts    \n\n       - a (set of) FASTA/FASTQ file(s) containing your reads  \n\n1. Two strategies:\n\n       - mapping-based mode\n\n       - alignment-based mode\n\n:::{.notes}\naccurately quantify transcripts without having previously aligned the reads\n:::\n\n\n## Diversi Software\n### Allineamento al genoma\n#### [Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#using-salmon)\n\n<hr>\n\n#### mapping-based mode\n\n1. Preparing transcriptome indices\n\n    ```\n    > salmon index -t transcripts.fa.gz -i transcripts_index\n    ```\n\n<br>\n\n2. Quantify\n\n    ```\n    > salmon quant -i transcripts_index -l <LIBTYPE> -1 reads1.fq -2 reads2.fq -o transcripts_quant\n    ```\n\n\n\n:::{.notes}\n- The index is a structure that salmon uses to quasi-map RNA-seq reads during quantification\n\n- The index need only be constructed once per transcriptome, and it can then be reused to quantify many experiments.\n:::\n\n## Diversi Software\n### Allineamento al genoma\n#### [Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#using-salmon)\n\n<hr>\n\n#### alignment-based mode\n\n1. Prepare your alignments using your favorite aligner\n\n1. Quantify using Salmon\n\n    ```\n    > salmon quant -t transcripts.fa.gz -l <LIBTYPE> -a aln.bam -o salmon_quant\n    ```\n\n## Diversi Software\n### Allineamento al genoma\n#### [Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#using-salmon)\n\n<hr>\n\n#### Fragment Library Types\n\n1. There are numerous library preparation protocols for RNA-seq \n\n1.  The library type string consists of three parts: \n  \n    - the relative orientation of the reads, \n      \n    - the strandedness of the library, \n      \n    - the directionality of the reads\n\n:::{.notes}\n1- that result in sequencing reads with different characteristics\n\n- reads can be single end (only one side of a fragment is recorded as a read) or paired-end (reads are generated from both ends of a fragment)\n\n- the sequencing reads themselves may be unstranded or strand-specific\n\n- paired-end protocols will have a specified relative orientation\n\n:::\n\n## Diversi Software\n### Allineamento al genoma\n#### [Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#using-salmon)\n\n<hr>\n\n#### Fragment Library Types\n\n:::{.p-img-center}\n![](images/frag.png){width=800}\n:::\n\n\n:::{.notes}\n- The first part of the library string (relative orientation) is only provided if the library is paired-end\n\n    - I = inward    \n    - O = outward    \n    - M = matching    \n\n- The second part of the read library string specifies whether the protocol is stranded or unstranded\n\n     - S = stranded     \n     - U = unstranded\n\n- The final part of the library string specifies the strand from which the read originates in a strand-specific protocol — it is only provided if the library is stranded\n\n:::\n\n## Diversi Software\n### Allineamento al genoma\n#### [Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#using-salmon)\n\n<hr>\n\n#### Salmon Output File Formats\n\n:::{.p-img-center}\n![](images/salm1.png){width=500}\n:::\n\n:::{.notes}\n1. Salmon’s main output is its quantification file => quant.sf\n\n1. cmd_info.json. This is a JSON format file that records the main command line parameters with which Salmon was invoked\n\n1. Auxiliary files: The top-level quantification directory will contain an auxiliary directory called aux_info\n\n     - The auxiliary directory will contain a JSON format file called meta_info.json which contains meta information about the run, including stats such as the number of observed and mapped fragments\n\n     -  If Salmon was run with automatic inference of the library type, information contained in this file is the inferred library type\n\n1. When run in mapping-based mode, the quantification directory will contain a file called lib_format_counts.json. This JSON file reports the number of fragments that had at least one mapping compatible with the designated library format\n\n\n:::\n\n## Diversi Software\n### Allineamento al genoma\n#### [Salmon](https://salmon.readthedocs.io/en/latest/salmon.html#using-salmon)\n\n<hr>\n\n#### Salmon Output File Formats\n\n\n:::{.f30}\n- **Name** — This is the name of the target transcript provided in the input transcript database (FASTA file).\n\n- **Length** — This is the length of the target transcript in nucleotides.\n\n- **EffectiveLength** — This is the computed effective length of the target transcript. It takes into account all factors being modeled that will effect the probability of sampling fragments from this transcript, including the fragment length distribution and sequence-specific and gc-fragment bias (if they are being modeled).\n\n- **TPM** — This is salmon’s estimate of the relative abundance of this transcript in units of Transcripts Per Million (TPM). TPM is the recommended relative abundance measure to use for downstream analysis.\n\n- **NumReads** — This is salmon’s estimate of the number of reads mapping to each transcript that was quantified. It is an “estimate” insofar as it is the expected number of reads that have originated from each transcript given the structure of the uniquely mapping and multi-mapping reads and the relative abundance estimates for each transcript.\n:::\n\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n:::{.callout-important}\nThe goal of differential expression testing is to determine which genes are expressed at different levels between conditions.\n:::\n\n:::{.fragment .fade-in fragment-index=1}\n\n:::{.f20}\nThese tools perform normalization and calculate the abundance of each gene expressed in a sample:\n\n\n- **ABSSeq** a new RNA-Seq analysis method based on modelling absolute expression differences.\n- **ALDEx2** is a tool for comparative analysis of high-throughput sequencing data. ALDEx2 uses compositional data analysis and can be applied to RNAseq, 16S rRNA gene sequencing, metagenomic sequencing, and selective growth experiments.\n- **Alexa-Seq** is a pipeline that makes possible to perform gene expression analysis, transcript specific expression analysis, exon junction expression and quantitative alternative analysis. Allows wide alternative expression visualization, statistics and graphs.\n- **ARH-seq** – identification of differential splicing in RNA-seq data.\n- **ASC[56]\n-** Ballgown\n- **BaySeq** is a Bioconductor package to identify differential expression using next-generation sequencing data, via empirical Bayesian methods. There is an option of using the \"snow\" package for parallelisation of computer data processing, recommended when dealing with large data sets.\n- **GMNB[57]** is a Bayesian method to temporal gene differential expression analysis across different phenotypes or treatment conditions that naturally handles the heterogeneity of sequencing depth in different samples, removing the need for ad-hoc normalization.\n- **BBSeq\n-** BitSeq (Bayesian Inference of Transcripts from Sequencing Data) is an application for inferring expression levels of individual transcripts from sequencing (RNA-Seq) data and estimating differential expression (DE) between conditions.\n- **CEDER** Accurate detection of differentially expressed genes by combining significance of exons using RNA-Seq.\n- **CPTRA** The CPTRA package is for analyzing transcriptome sequencing data from different sequencing platforms. It combines advantages of 454, Illumina GAII, or other platforms and can perform sequence tag alignment and annotation, expression quantification tasks.\n- **casper** is a Bioconductor package to quantify expression at the isoform level. It combines using informative data summaries, flexible estimation of experimental biases and statistical precision considerations which (reportedly) provide substantial reductions in estimation error.\n- **Cufflinks/Cuffdiff** is appropriate to measure global de novo transcript isoform expression. It performs assembly of transcripts, estimation of abundances and determines differential expression (Cuffdiff) and regulation in RNA-Seq samples.[58]\n- **DESeq** is a Bioconductor package to perform differential gene expression analysis based on negative binomial distribution.\n- **DEGSeq\n-** Derfinder Annotation-agnostic differential expression analysis of RNA-seq data at base-pair resolution via the DER Finder approach.\n- **DEvis** is a powerful, integrated solution for the analysis of differential expression data. Using DESeq2 as a framework, DEvis provides a wide variety of tools for data manipulation, visualization, and project management.\n- **DEXSeq** is Bioconductor package that finds differential differential exon usage based on RNA-Seq exon counts between samples. DEXSeq employs negative binomial distribution, provides options to visualization and exploration of the results.\n- **DEXUS** is a Bioconductor package that identifies differentially expressed genes in RNA-Seq data under all possible study designs such as studies without replicates, without sample groups, and with unknown conditions.[59] In contrast to other methods, DEXUS does not need replicates to detect differentially expressed transcripts, since the replicates (or conditions) are estimated by the EM method for each transcript.\n- **DGEclust** is a Python package for clustering expression data from RNA-seq, CAGE and other NGS assays using a Hierarchical Dirichlet Process Mixture Model. The estimated cluster configurations can be post-processed in order to identify differentially expressed genes and for generating gene- and sample-wise dendrograms and heatmaps.[60]\n- **DiffSplice** is a method for differential expression detection and visualization, not dependent on gene annotations. This method is supported on identification of alternative splicing modules (ASMs) that diverge in the different isoforms. A non-parametric test is applied to each ASM to identify significant differential transcription with a measured false discovery rate.\n- **EBSeq** is a Bioconductor package for identifying genes and isoforms differentially expressed (DE) across two or more biological conditions in an RNA-seq experiment. It also can be used to identify DE contigs after performing de novo transcriptome assembly. While performing DE analysis on isoforms or contigs, different isoform/contig groups have varying estimation uncertainties. EBSeq models the varying uncertainties using an empirical Bayes model with different priors.\n- **EdgeR** is a R package for analysis of differential expression of data from DNA sequencing methods, like RNA-Seq, SAGE or ChIP-Seq data. edgeR employs statistical methods supported on negative binomial distribution as a model for count variability.\n- **EdgeRun** an R package for sensitive, functionally relevant differential expression discovery using an unconditional exact test.\n- **EQP** The exon quantification pipeline (EQP): a comprehensive approach to the quantification of gene, exon and junction expression from RNA-seq data.\n- **ESAT** The End Sequence Analysis Toolkit (ESAT) is specially designed to be applied for quantification of annotation of specialized RNA-Seq gene libraries that target the 5' or 3' ends of transcripts.\n- **eXpress** performance includes transcript-level RNA-Seq quantification, allele-specific and haplotype analysis and can estimate transcript abundances of the multiple isoforms present in a gene. Although could be coupled directly with aligners (like Bowtie), eXpress can also be used with de novo assemblers and thus is not needed a reference genome to perform alignment. It runs on Linux, Mac and Windows.\n- **ERANGE** performs alignment, normalization and quantification of expressed genes.\n- **featureCounts** an efficient general-purpose read quantifier.\n- **FDM\n-** FineSplice Enhanced splice junction detection and estimation from RNA-Seq data.\n- **GFOLD[61]** Generalized fold change for ranking differentially expressed genes from RNA-seq data.\n- **globalSeq[62]** Global test for counts: testing for association between RNA-Seq and high-dimensional data.\n- **GPSeq** This is a software tool to analyze RNA-seq data to estimate gene and exon expression, identify differentially expressed genes, and differentially spliced exons.\n- **IsoDOT** – Differential RNA-isoform Expression.\n- **Limma** Limma powers differential expression analyses for RNA-sequencing and microarray studies.\n- **LPEseq** accurately test differential expression with a limited number of replicates.\n- **Kallisto** \"Kallisto is a program for quantifying abundances of transcripts from RNA-Seq data, or more generally of target sequences using high-throughput sequencing reads. It is based on the novel idea of pseudoalignment for rapidly determining the compatibility of reads with targets, without the need for alignment. On benchmarks with standard RNA-Seq data, kallisto can quantify 30 million human reads in less than 3 minutes on a Mac desktop computer using only the read sequences and a transcriptome index that itself takes less than 10 minutes to build.\"\n- **MATS** Multivariate Analysis of Transcript Splicing (MATS).\n- **MAPTest** provides a general testing framework for differential expression analysis of RNA-Seq time course experiment. Method of the pack is based on latent negative-binomial Gaussian mixture model. The proposed test is optimal in the maximum average power. The test allows not only identification of traditional DE genes but also testing of a variety of composite hypotheses of biological interest.[63]\n- **MetaDiff** Differential isoform expression analysis using random-effects meta-regression.\n- **metaseqR** is a Bioconductor package that detects differentially expressed genes from RNA-Seq data by combining six statistical algorithms using weights estimated from their performance with simulated data estimated from real data, either public or user-based. In this way, metaseqR optimizes the tradeoff between precision and sensitivity.[64] In addition, metaseqR creates a detailed and interactive report with a variety of diagnostic and exploration plots and auto-generated text.\n- **MMSEQ** is a pipeline for estimating isoform expression and allelic imbalance in diploid organisms based on RNA-Seq. The pipeline employs tools like Bowtie, TopHat, ArrayExpressHTS and SAMtools. Also, edgeR or DESeq to perform differential expression.\n- **MultiDE\n-** Myrna is a pipeline tool that runs in a cloud environment (Elastic MapReduce) or in a unique computer for estimating differential gene expression in RNA-Seq datasets. Bowtie is employed for short read alignment and R algorithms for interval calculations, normalization, and statistical processing.\n- **NEUMA** is a tool to estimate RNA abundances using length normalization, based on uniquely aligned reads and mRNA isoform models. NEUMA uses known transcriptome data available in databases like RefSeq.\n- **NOISeq** NOISeq is a non-parametric approach for the identification of differentially expressed genes from count data or previously normalized count data. NOISeq empirically models the noise distribution of count changes by contrasting fold-change differences (M) and absolute expression differences (D) for all the features in samples within the same condition.\n- **NPEBseq** is a nonparametric empirical Bayesian-based method for differential expression analysis.\n- **NSMAP** allows inference of isoforms as well estimation of expression levels, without annotated information. The exons are aligned and splice junctions are identified using TopHat. All the possible isoforms are computed by a combination of the detected exons.\n- **NURD** an implementation of a new method to estimate isoform expression from non-uniform RNA-seq data.\n- **PANDORA** An R package for the analysis and result reporting of RNA-Seq data by combining multiple statistical algorithms.\n- **PennSeq** PennSeq: accurate isoform-specific gene expression quantification in RNA-Seq by modeling non-uniform read distribution.\n- **QuasR** Quantify and Annotate Short Reads in R.\n- **RapMap** A Rapid, Sensitive and Accurate Tool for Mapping RNA-seq Reads to Transcriptomes.\n- **recursiveCorPlot** Correlation based clustering for RNA-seq data (+ ggplot corrplot-like interface - R-package: recursiveCorPlot).[65]\n- **RNAeXpress** Can be run with Java GUI or command line on Mac, Windows, and Linux. It can be configured to perform read counting, feature detection or GTF comparison on mapped rnaseq data.\n- **Rcount** Rcount: simple and flexible RNA-Seq read counting.\n- **rDiff** is a tool that can detect differential RNA processing (e.g. alternative splicing, polyadenylation or ribosome occupancy).\n- **RNASeqPower** Calculating samples Size estimates for RNA Seq studies. R package version.\n- **RNA-Skim** RNA-Skim: a rapid method for RNA-Seq quantification at transcript-level.\n- **rSeq** rSeq is a set of tools for RNA-Seq data analysis. It consists of programs that deal with many aspects of RNA-Seq data analysis, such as read quality assessment, reference sequence generation, sequence mapping, gene and isoform expressions (RPKMs) estimation, etc.\n- **RSEM\n-** rQuant is a web service (Galaxy (computational biology) installation) that determines abundances of transcripts per gene locus, based on quadratic programming. rQuant is able to evaluate biases introduced by experimental conditions. A combination of tools is employed: PALMapper (reads alignment), mTiM and mGene (inference of new transcripts).\n- **Salmon** is a software tool for computing transcript abundance from RNA-seq data using either an alignment-free (based directly on the raw reads) or an alignment-based (based on pre-computed alignments) approach. It uses an online stochastic optimization approach to maximize the likelihood of the transcript abundances under the observed data. The software itself is capable of making use of many threads to produce accurate quantification estimates quickly. It is part of the Sailfish suite of software, and is the successor to the Sailfish tool.\n- **SAJR** is a java-written read counter and R-package for differential splicing analysis. It uses junction reads to estimate exon exclusion and reads mapped within exon to estimate its inclusion. SAJR models it by GLM with quasibinomial distribution and uses log likelihood test to assess significance.\n- **Scotty** Performs power analysis to estimate the number of replicates and depth of sequencing required to call differential expression.\n- **Seal** alignment-free algorithm to quantify sequence expression by matching kmers between raw reads and a reference transcriptome. Handles paired reads and alternate isoforms, and uses little memory. Accepts all common read formats, and outputs read counts, coverage, and FPKM values per reference sequence. Open-source, written in pure Java; supports all platforms with no recompilation and no other dependencies. Distributed with BBMap. (Seal - Sequence Expression AnaLyzer - is unrelated to the SEAL distributed short-read aligner.)\n- **semisup[66]** Semi-supervised mixture model: detecting SNPs with interactive effects on a quantitative trait\n- **Sleuth** is a program for analysis of RNA-Seq experiments for which transcript abundances have been quantified with kallisto.\n- **SplicingCompass** differential splicing detection using RNA-Seq data.\n- **sSeq** The purpose of this R package is to discover the genes that are differentially expressed between two conditions in RNA-seq experiments.\n- **StringTie** is an assembler of RNA-Seq alignments into potential transcripts. It uses a novel network flow algorithm as well as an optional de novo assembly step to assemble and quantitate full-length transcripts representing multiple splice variants for each gene locus. It was designed as a successor to Cufflinks (its developers include some of the Cufflinks developers) and has many of the same features.\n- **TIGAR** Transcript isoform abundance estimation method with gapped alignment of RNA-Seq data by variational Bayesian inference.\n- **TimeSeq** Detecting Differentially Expressed Genes in Time Course RNA-Seq Data.\n- **TPMCalculator[67]** one-step software to quantify mRNA abundance of genomic features.\n- WemIQ is a software tool to quantify isoform expression and exon splicing ratios from RNA-seq data accurately and robustly.\n\nFrom: https://en.wikipedia.org/wiki/List_of_RNA-Seq_bioinformatics_tools\n:::\n:::\n\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\nThe count data used for DGE represents the number of sequence reads that originated from a particular gene.\n\n:::{.p-img-center}\n![](images/count.png){width=1200}\n:::\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n#### Normalization\n\nThe count data needs to be normalized to account for differences in **library sizes** and **RNA composition** between samples\n\n\n:::{.fragment}\n\n:::{.callout-important}\nNormalization is essential for **differential expression analyses**, and also for **exploratory data analysis**, **visualization of data**, and whenever you are exploring or comparing counts between or within samples\n:::\n\n:::\n\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n#### Normalization\n\n:::{.f25}\n|                                                                                                                    |                                                                                                                              |                                      |                                                                                                                         |\n|------------------|--------------------|----------------|-------------------|\n| **Normalization method**                                                                                           | **Description**                                                                                                              | **Accounted factors**                | **Recommendations for use**                                                                                             |\n| **CPM** (counts per million)                                                                                       | counts scaled by total number of reads                                                                                       | sequencing depth                     | gene count comparisons between replicates of the same samplegroup; **NOT for within sample comparisons or DE analysis** |\n| **TPM** (transcripts per kilobase million)                                                                         | counts per length of transcript (kb) per million reads mapped                                                                | sequencing depth and gene length     | gene count comparisons within a sample or between samples of the same sample group; **NOT for DE analysis**             |\n| **RPKM/FPKM** (reads/fragments per kilobase of exon per million reads/fragments mapped)                            | similar to TPM                                                                                                               | sequencing depth and gene length     | gene count comparisons between genes within a sample; **NOT for between sample comparisons or DE analysis**             |\n| DESeq2's **median of ratios** \\[[1](https://genomebiology.biomedcentral.com/articles/10.1186/gb-2010-11-10-r106)\\] | counts divided by sample-specific size factors determined by median ratio of gene counts relative to geometric mean per gene | sequencing depth and RNA composition | gene count comparisons between samples and for **DE analysis**; **NOT for within sample comparisons**                   |\n\n\n:::\n\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n#### Quality Control at SAMPLE level\n\n:::{incremental}\n\n- Which samples are similar to each other, which are different?\n\n- Does this fit to the expectation from the experiment’s design?\n\n- What are the major sources of variation in the dataset?\n\n:::\n\n:::{.notes}\n- ensure that the samples/replicates look good\n\n- Sample-level QC allows us to see how well our replicates cluster together\n:::\n\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n#### Quality Control at SAMPLE level\n\n- Log2-transformed normalized counts are used to assess similarity between samples using:\n  \n    - Principal Component Analysis (PCA)     \n    - Hierarchical clustering\n\n:::{.p-img-center}\n![](images/pcahc.png){width=1000}\n:::\n\n\n:::{.notes}\n- Using log2 transformation, tools aim to moderate the variance across the mean\n:::\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n#### Quality Control at GENE level\n\n:::{.callout-important}\nPrior to differential expression analysis it is beneficial to omit genes that have little or no chance of being detected as differentially expressed\n:::\n\n:::{.fragment}\n- Genes with zero counts in all samples\n\n- Genes with an extreme count outlier\n\n- Genes with a low mean normalized counts\n:::\n\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n#### Quality Control at GENE level\n\n:::{.callout-important}\nPrior to differential expression analysis it is beneficial to omit genes that have little or no chance of being detected as differentially expressed\n:::\n\n:::{.p-img-center}\n![](images/gele.png){width=1200}\n:::\n\n\n## Diversi Software {.scrollable}\n### Differential Gene Expression (DGE)\n\n<br>\n\n#### Quality Control at GENE level\n\n:::{.callout-important}\nPrior to differential expression analysis it is beneficial to omit genes that have little or no chance of being detected as differentially expressed\n:::\n\n<br>\n<br>\n\n:::{.f60 .tcenter}\n\n**DESeq2** will perform this filtering by default, \n\nhowever other DE tools will not\n\n:::\n\n## Diversi Software\n### Differential Gene Expression (DGE)\n#### [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html)\n\n<br>\n\n#### Modeling raw count for each gene\n\n:::{.p-img-center}\n![](images/rawc.png){width=700}\n:::\n\n:::{.notes}\nThese images illustrate some common features of RNA-seq count data:\n\n- a low number of counts associated with a large proportion of genes\n\n- a long right tail due to the lack of any upper limit for expression\n\n- large dynamic range\n:::\n\n## Diversi Software\n### Differential Gene Expression (DGE)\n#### [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html)\n\n<br>\n\n#### Modeling raw count for each gene\n\n\n:::{.p-img-center}\n![](images/AH-noNorm.png ){width=900}\n:::\n\n:::{.notes}\n- RNASeq data are non-normally distributed data \n  \n- the normal distribution does not accurately model RNA-seq counts\n:::\n\n\n## Diversi Software\n### Differential Gene Expression (DGE)\n#### [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html)\n\n<br>\n\n#### Modeling raw count for each gene\n\n<br>\n<br>\n\n:::{.f60 .tcenter}\nSo what do we use for RNA-seq count data?\n:::\n\n:::{.notes}\nCount data in general can be modeled with various distributions:\n\n- **Binomial distribution**: Gives you the probability of getting a number of heads upon tossing a coin a number of times. Based on discrete events and used in situations when you have a certain number of cases.\n\n- **Poisson distribution**: For use, when the number of cases is very large (i.e. people who buy lottery tickets), but the probability of an event is very small (probability of winning). The Poisson is similar to the binomial, but is based on continuous events. Appropriate for data where mean == variance.\n\n- **Negative binomial distribution**: An approximation of the Poisson, but has an additional parameter that adjusts the variance independently from the mean.\n:::\n\n## Diversi Software\n### Differential Gene Expression (DGE)\n#### [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html)\n\n<br>\n\n#### Modeling raw count for each gene\n\n<br>\n<br>\n\n:::{.f60 .tcenter}\n**DESeq2** uses the negative binomial model\n:::\n\n---\n\n:::{.tit}\n“All models are wrong, but some are useful”. \n:::\n\n:::{style=\"font-size: 30px; text-align: right\"}\nGeorge E. P. Box\n:::\n\n\n## Diversi Software\n### Differential Gene Expression (DGE)\n#### [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html)\n\n<br>\n\n#### The DESeqDataSet\n\n\n:::{.p-img-center}\n![](images/sexp.png){width=650}\n:::\n\n\n\n:::{.notes}\n- DESeqDataSet class extends the RangedSummarizedExperiment class of the SummarizedExperiment package\n\n- The “Ranged” part refers to the fact that the rows of the assay data (here, the counts) can be associated with genomic ranges\n\n----\n\n- A DESeqDataSet object must have an associated design formula\n  \n- The design formula expresses the variables which will be used in modeling\n:::\n\n## Diversi Software{.scrollable}\n### Differential Gene Expression (DGE)\n#### [DESeq2](https://bioconductor.org/packages/release/bioc/html/DESeq2.html)\n\n<br>\n\n#### SummarisedExperiment\n\n```\nnrows <- 200\nncols <- 6\ncounts <- matrix(runif(nrows * ncols, 1, 1e4), nrows)\nrowRanges <- GRanges(rep(c(\"chr1\", \"chr2\"), c(50, 150)),\n                     IRanges(floor(runif(200, 1e5, 1e6)), width=100),\n                     strand=sample(c(\"+\", \"-\"), 200, TRUE),\n                     feature_id=sprintf(\"ID%03d\", 1:200))\ncolData <- DataFrame(Treatment=rep(c(\"ChIP\", \"Input\"), 3),\n                     row.names=LETTERS[1:6])\n\nse <- SummarizedExperiment(assays=list(counts=counts),\n                     rowRanges=rowRanges, colData=colData)\n\nassay(se)\nrowData(se)\nrowRanges(se)\ncolData(se)\n\nrowData(se)$marco <- FALSE\nrowData(se)$marco[c(1,2,5,200)] <- TRUE\nassay(se[rowData(se)$marco == TRUE, ])\ncolData(se[,colData(se)$Treatment == \"Input\"])\n\nse[rowData(se)$marco == TRUE, colData(se)$Treatment == \"Input\"]\n```\n\n\n#  {background-image=\"images/qmark.jpg\" background-size=\"cover\" background-opacity=\"0.7\"}\n\n::: {style=\"position: absolute; left: 980px; top: 450px;\"}\n[Domande?]{style=\"font-size: 130px; font-weight: bold; color: white\"}\n:::\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}